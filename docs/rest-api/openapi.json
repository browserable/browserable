{
  "openapi": "3.1.0",
  "info": {
    "title": "Browserable API",
    "description": "API for managing automated browser tasks",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.browserable.ai/api/v1/",
      "description": "API Server"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check if the API server is running",
        "security": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check": {
      "get": {
        "summary": "API Key Check",
        "description": "Verify if your API key is valid",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/create": {
      "post": {
        "summary": "Create Task",
        "description": "Create a new automated browser task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["task"],
                "properties": {
                  "task": {
                    "type": "string",
                    "description": "Natural language description of the task to be automated",
                    "example": "Monitor a website for price changes"
                  },
                  "agent": {
                    "type": "string",
                    "default": "BROWSER_AGENT",
                    "description": "Agent to use for the task"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "taskId": {
                          "type": "string",
                          "description": "The ID of the created task",
                          "example": "task_123"
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message if the request failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "List Tasks",
        "description": "Get a list of all tasks for the authenticated user",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of tasks per page (max: 30)",
            "schema": {
              "type": "integer",
              "default": 30,
              "maximum": 30,
              "example": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "description": "Array of task objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the task",
                            "example": "task_123"
                          },
                          "status": {
                            "type": "string",
                            "enum": ["active", "inactive"],
                            "description": "Current status of the task",
                            "example": "active"
                          },
                          "readable_name": {
                            "type": "string",
                            "description": "Human-readable name of the task",
                            "example": "My Task"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of tasks",
                      "example": 1
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Number of tasks per page",
                      "example": 30
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message if the request failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{taskId}/runs": {
      "get": {
        "summary": "List Task Runs",
        "description": "Get a list of all runs for a specific task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of runs per page (max: 30)",
            "schema": {
              "type": "integer",
              "default": 30,
              "maximum": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message if the request failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{taskId}/run/status": {
      "get": {
        "summary": "Get Task Run Status",
        "description": "Get the status of a specific task run",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task",
            "schema": {
              "type": "string",
              "example": "task_123"
            }
          },
          {
            "name": "runId",
            "in": "query",
            "required": false,
            "description": "The ID of the run. If not provided, returns status of the most recent run.",
            "schema": {
              "type": "string",
              "example": "run_456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": ["scheduled", "running", "completed", "error"],
                          "description": "High-level status of the task run",
                          "example": "running"
                        },
                        "detailedStatus": {
                          "type": "string",
                          "description": "Detailed status information about the current state",
                          "example": "processing_page"
                        },
                        "inputWait": {
                          "type": "object",
                          "description": "Information about any user input being waited on",
                          "nullable": true,
                          "example": null
                        },
                        "liveStatus": {
                          "type": "object",
                          "description": "Real-time status information about the current operation",
                          "example": "<live url>"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{taskId}/run/result": {
      "get": {
        "summary": "Get Task Run Result",
        "description": "Get the results of a specific task run",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task",
            "schema": {
              "type": "string",
              "example": "task_123"
            }
          },
          {
            "name": "runId",
            "in": "query",
            "required": false,
            "description": "The ID of the run. If not provided, returns results of the most recent run.",
            "schema": {
              "type": "string",
              "example": "run_456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": ["scheduled", "running", "completed", "error"],
                          "description": "Status of the run",
                          "example": "completed"
                        },
                        "error": {
                          "type": "string",
                          "description": "Error message if the run failed",
                          "example": null
                        },
                        "output": {
                          "type": "object",
                          "description": "Output data from the completed run",
                          "example": {
                            "summary": "Task completed successfully"
                          }
                        },
                        "dataTable": {
                          "type": "array",
                          "description": "Array of documents collected during the run",
                          "items": {
                            "type": "object"
                          },
                          "example": [
                            {
                              "title": "Sample Data",
                              "value": 123
                            }
                          ]
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message if the request failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{taskId}/run/stop": {
      "put": {
        "summary": "Stop Task Run",
        "description": "Stop a running task execution",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runId",
            "in": "query",
            "required": false,
            "description": "The ID of the run. If not provided, stops the most recent run.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message if the request failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{taskId}/stop": {
      "put": {
        "summary": "Stop Task",
        "description": "Stop a task from running future executions",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task to stop",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{taskId}/run/gif": {
      "get": {
        "summary": "Get Task Run GIF",
        "description": "Get the GIF for a specific task run",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task",
            "schema": {
              "type": "string",
              "example": "task_123"
            }
          },
          {
            "name": "runId",
            "in": "query",
            "required": false,
            "description": "The ID of the run. If not provided, returns GIF status of the most recent run.",
            "schema": {
              "type": "string",
              "example": "run_456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the GIF generation",
                          "example": "completed"
                        },
                        "url": {
                          "type": "string",
                          "description": "URL of the generated GIF",
                          "example": "https://example.com/gif.gif"
                        },
                        "error": {
                          "type": "string",
                          "description": "Error message if the GIF generation failed",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}